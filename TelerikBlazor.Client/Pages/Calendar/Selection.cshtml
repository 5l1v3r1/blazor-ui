@page "/calendar/selection"
@using Telerik.Blazor.Components.Calendar

    <div>
        The user will not be able to select the first and second of April 2019.
    </div>
    <div class="d-inline-flex p-2">
        <div style="margin-right:5em;">
            <h4>Single Selection</h4>

            <TelerikCalendar SelectionMode="@CalendarSelectionMode.Single" ValueChanged="@SingleSelectionChangeHandler" DisabledDates="@DisabledDates" Date="@startDate">
            </TelerikCalendar>
            <br />
            @if (selectedDate != null)
            {
                @selectedDate.Value.ToString("dd MMM yyyy");
            }

        </div>
        <div>
            <h4>Multiple Selection</h4>

            <TelerikCalendar SelectionMode="@CalendarSelectionMode.Multiple" ValueChanged="@MultipleSelectionChangeHandler" DisabledDates="@DisabledDates" Date="@startDate" ref="@multipleSelectionCalendar">
            </TelerikCalendar>
            <br />
            @if (chosenDates != null && chosenDates.Count > 0)
            {
                <ul>
                    @foreach (DateTime date in chosenDates)
                    {
                        <li>@date.ToString("dd MMM yyyy")</li>
                    }
                </ul>
            }
        </div>
    </div>
@functions {
    private DateTime startDate = new DateTime(2019, 4, 1);//set the initial date of the calendar

    //set dates the user can't select
    private List<DateTime> DisabledDates = new List<DateTime>() { new DateTime(2019, 4, 1), new DateTime(2019, 4, 2) };

    //fields to store and render the user selection
    private DateTime? selectedDate { get; set; } = null;
    private List<DateTime> chosenDates { get; set; }

    //reference used to obtain the selected dates from a multiple selection calendar
    private TelerikCalendar multipleSelectionCalendar;

    private void SingleSelectionChangeHandler(DateTime newValue)
    {
        //with single selection, the argument is a single DateTime object
        selectedDate = (DateTime)newValue;

        StateHasChanged();
    }

    private void MultipleSelectionChangeHandler()
    {
        //with multiple selection, get the selected dates from a component reference
        chosenDates = multipleSelectionCalendar.SelectedDates;

        StateHasChanged();
    }
}
