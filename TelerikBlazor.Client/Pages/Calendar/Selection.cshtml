@page "/calendar/selection"
@using Telerik.Blazor.Components.Calendar

The user will not be able to select the first and second of April 2019.

<h4>Single Selection</h4>

<TelerikCalendar SelectionMode="@CalendarSelectionMode.Single" ValueChanged="@SingleSelectionChangeHandler" DisabledDates="@DisabledDates" Date="@startDate">
</TelerikCalendar>
<br />
@if(selectedDate != null)
{
	@selectedDate.Value.ToString("dd MMM yyyy");
}


<h4>Multiple Selection</h4>

<TelerikCalendar SelectionMode="@CalendarSelectionMode.Multiple" ValueChanged="@MultipleSelectionChangeHandler" DisabledDates="@DisabledDates" Date="@startDate" ref="@multipleSelectionCalendar">
</TelerikCalendar>
<br />
@if (chosenDates != null && chosenDates.Count > 0)
{
	<ul>
		@foreach (DateTime date in chosenDates)
		{
			<li>@date.ToString("dd MMM yyyy")</li>
		}
	</ul>
}

@functions {
    private DateTime startDate = new DateTime(2019, 4, 1);//set the initial date of the calendar

    //set dates the user can't select
    private List<DateTime> DisabledDates = new List<DateTime>() { new DateTime(2019, 4, 1), new DateTime(2019, 4, 2) };

    //fields to store and render the user selection
    private DateTime? selectedDate { get; set; } = null;
    private List<DateTime> chosenDates { get; set; }

    private TelerikCalendar multipleSelectionCalendar;

    private void SingleSelectionChangeHandler(DateTime newValue)
    {
        //with single selection, the argument is a single DateTime object
        selectedDate = (DateTime)newValue;

        StateHasChanged();
    }

    private void MultipleSelectionChangeHandler()
    {
        chosenDates = multipleSelectionCalendar.SelectedDates;

        StateHasChanged();
    }
}
