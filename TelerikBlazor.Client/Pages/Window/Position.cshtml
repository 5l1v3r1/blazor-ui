@page "/window/position"
@using Telerik.Blazor

<span>Window Position could be set via <strong>Centered</strong> attribute, or via <strong>Top</strong> and <strong>Left</strong></span>

<div>
    <label>
        Centered:
        <input type="checkbox" onchange="@SetCentered" />
    </label>
    <input type="number" bind="@Top" placeholder="Set Top" />
    <input type="number" bind="@Left" placeholder="Set Left" />
</div>

<TelerikWindow Size="@Size.Small" Centered="@Centered" Top="@Top" Left="@Left" Visible="true">
    <TelerikWindowTitle>
        <strong>Status</strong>
    </TelerikWindowTitle>
    <TelerikWindowActions>
        <TelerikWindowAction Name="Minimize"></TelerikWindowAction>
        <TelerikWindowAction Name="Maximize"></TelerikWindowAction>
        <TelerikWindowAction Name="Close"></TelerikWindowAction>
    </TelerikWindowActions>
    <TelerikWindowContent>
        <form class="k-form">
            <fieldset>
                <legend>User Details</legend>

                <label class="k-form-field">
                    <span>First Name</span>
                    <input class="k-textbox" placeholder="Your Name" />
                </label>
                <label class="k-form-field">
                    <span>Last Name</span>
                    <input class="k-textbox" placeholder="Your Last Name" />
                </label>
            </fieldset>
        </form>
    </TelerikWindowContent>
</TelerikWindow>
@functions {
    public bool Centered { get; set; }
    public int? Top { get; set; }
    public int? Left { get; set; }
    public void SetCentered (UIChangeEventArgs e)
    {
        var isCentered = bool.Parse(e.Value.ToString());
        Top = Left = null;

        Centered = isCentered;
        StateHasChanged();
    }
}